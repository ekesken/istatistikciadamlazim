a platform to share your charts...

save your data continously, create charts of your data, share them with people.

INSTALL:
========

some documents to get general idea about django-googleappengine integration:
* http://code.google.com/appengine/articles/django-nonrel.html
* http://www.allbuttonspressed.com/projects/djangoappengine
* http://www.allbuttonspressed.com/projects/django-nonrel

after checking out django-autoload, django-dbindexer, django-nonrel,
djangoappengine folders from their repositories and setting up your
django-nonrel environment should have a folder structure like this:

django-autoload
django-dbindexer
django-nonrel
djangotoolbox
djangoappengine
istatistikciadamlazim
 \|- autoload -> ../django-autoload/autoload
  |- dbindexer -> ../django-dbindexer/dbindexer
  |- django -> ../django-nonrel/django
  |- djangotoolbox -> ../djangotoolbox/djangotoolbox
  |- djangoappengine -> ../djangoappengine

to setup django you checked out. enter django-nonrel folder and run command:

$ python setup.py install

now enter istatistikciadamlazim, and run:

$ python manage.py runserver

your application is ready to test at address 'http://127.0.0.1:8000/'.

allauth uses sites framework, for creating a new site we used:

$ python manage.py shell
> from django.contrib.sites.models import Site
> default_site = Site(1, "istatistikci.adamlazim.com", "istatistikci")
> default_site.save()

and added

SITE_ID=1

line to settings.py.

LOCALIZATION
============

if you used a new string in your templates via {{_('xxx')}} method, you have to run following command:

$ django-admin.py makemessages -l tr

then you need to add turkish translation at changed locale/tr/LC_MESSAGES/django.p file.

when you finished translations, run following command to compile (otherwise you can't see your changes)

$ django-admin.py compilemessages

you'll also need to restart server.

DEBUG
=====

add following lines to the point you want to stop code.

<code>
import pdb
pdb.set_trace()
</code>

then run your server as usual with command:

$ python manage.py runserver

make your request from a browser, you'll see a pdb prompt whenever pdb.set_trace() method is called.

press c to continue running program. see help menu for other commands.

DEPLOY
======

go to upper directory and run command:

$ appcfg.py update istatistikciadamlazim

